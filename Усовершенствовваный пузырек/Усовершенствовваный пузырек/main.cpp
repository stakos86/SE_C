//
//  main.cpp
//  Усовершенствовваный пузырек
//
//  Created by Станислав Егоров on 06.11.2023.
//

#include <iostream>
using namespace std;

void bubbleSort(int arr[], int n) {
    bool swapped; // Флаг для отслеживания наличия перестановок
    for (int i = 0; i < n-1; i++) {
        swapped = false;
        for (int j = 0; j < n-i-1; j++) {
            if (arr[j] > arr[j+1]) {
                // Обмен значениями элементов
                int temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
                swapped = true; // Устанавливаем флаг перестановки
            }
        }
        if (!swapped) {
            // Если на текущем шаге не было перестановок, то массив уже отсортирован
            break;
        }
    }
}

int main() {
    int arr[] = {64, 34, 25, 12, 22, 11, 90};
    int n = sizeof(arr)/sizeof(arr[0]);

    bubbleSort(arr, n);

    cout << "Отсортированный массив: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    return 0;
}

/*
В данном коде выполняется сортировка пузырьковым методом. Основной цикл содержит два вложенных цикла: внутренний перебирает элементы массива и, если текущий элемент больше следующего, меняет их местами. Каждый раз, когда выполняется обмен элементов, флаг выставляется в true. Если после закрытия внутреннего цикла флаг остается false, это означает, что не было никаких перестановок на данном шаге, поэтому массив уже отсортирован, и сортировка может быть остановлена.

На выходе будет отсортированный массив: 11 12 22 25 34 64 90
*/
